{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 I'm retnikt: autodidact Pythonista, hobbyist sysadmin, and omniautomator. Check out some of my projects to see what I'm doing!","title":"Home"},{"location":"#home","text":"I'm retnikt: autodidact Pythonista, hobbyist sysadmin, and omniautomator. Check out some of my projects to see what I'm doing!","title":"Home"},{"location":"projects/website/","text":"My Website \u00b6 Across my lifetime, I have tried numerous mechanisms for my website with a basic blog system, including WordPress, Pelican, Jekyll, and even a home-grown solution. I have now settled on MkDocs , which is definitely not intended for blogging, but I find it well-suited for the task. Getting Started \u00b6 I installed mkdocs with pip install mkdocs and created a new project using mkdocs new . . I also initialised a Git repository on GitHub to version all the configuration and content. Customisation \u00b6 Now it's time for some configuration. Theme \u00b6 The first thing to do is pick a theme. I chose the popular and brilliant mkdocs-material . To install, you can follow this guide for detailed instructions, but essentially: you use pip. ( pip install mkdocs-material ) Code theme : name : 'material' custom_dir : 'theme' The custom_dir line is so that we can override parts of the HTML. We can make some tweaks to the rest of the appearance too, including colours, fonts, and many other options . Here's my final theme section: Code theme : name : 'material' custom_dir : 'theme' language : en palette : primary : 'blue' accent : 'blue' font : text : 'Noto Sans' code : 'Fira Code' # we'll need some extra setup to make this work logo : icon : 'developer_board' feature : false favicon : 'assets/images/favicon2.png' Extra Options \u00b6 First let's set some basic options: Code site_name : retnikt site_url : 'https://retnikt.uk/' I'm going to add a copyright to the footer and some social media links, and enable a few (lots of) Markdown extensions: Code copyright : '\u00a9 retnikt 2019' extra : social : - type : 'github' link : 'https://github.com/retnikt' - type : 'twitter' link : 'https://twitter.com/retnikt' markdown_extensions : - admonition - codehilite - footnotes - meta - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - markdown.extensions.attr_list - markdown.extensions.def_list - markdown.extensions.tables - markdown.extensions.abbr - pymdownx.extrarawhtml - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.progressbar - pymdownx.keys - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde - toc : permalink : true Block Overrides \u00b6 I want to customise some of the theme components, particularly the footer. I'm going to add a GitHub Pages reference (see Deploying below), and hide the Next/Previous arrows for the homepage. Here's what I changed in the partials/footer.html Jinja2 template. Code ... <!-- if this is the homepage, then don't display the arrows --> {% if (not page.is_homepage) and (page.previous_page or page.next_page) %} < div class = \"md-footer-nav\" > < nav class = \"md-footer-nav__inner md-grid\" > <!-- if previous page is the homepage, then don't display the previous arrow --> {% if page.previous_page and not page.previous_page.is_homepage %} ... < a href = \"https://www.mkdocs.org\" > MkDocs </ a > and < a href = \"https://squidfunk.github.io/mkdocs-material/\" > Material for MkDocs </ a > hosted on < a href = \"https://pages.github.com\" > GitHub Pages </ a > </ div > ... I also modified partials/nav.html as well, changing {{ config.site_name }} (which would contain the site name) to just \"Navigation\" and change \"Table of contents\" to just \"Contents\" with a modified language file ( partials/language/en.html ). Also, to get the Fira Code font to work we need to modify the fonts block in the HTML < head > . In main.html , add: Code <!-- override the fonts block --> {% block fonts %} < style > /* use the Fira Code font from CDN */ @ font-face { font-family : 'Fira Code' ; src : local ( 'Fira Code Medium' ), local ( 'Fira Code' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/eot/FiraCode-Medium.eot' ); src : url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/eot/FiraCode-Medium.eot' ) format ( 'embedded-opentype' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/woff2/FiraCode-Medium.woff2' ) format ( 'woff2' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/woff/FiraCode-Medium.woff' ) format ( 'woff' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/ttf/FiraCode-Medium.ttf' ) format ( 'truetype' ); font-weight : 500 ; font-style : normal ; } </ style > {% if font != false %} < link href = \"https://fonts.gstatic.com\" rel = \"preconnect\" crossorigin > <!-- note the change to this link tag to stop trying to load Fira Code from Google Fonts (it's not there) --> < link rel = \"stylesheet\" href = \"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700|' }}\" > <!-- note the change to this style tag to load Fira Mono as a backup --> < style > body , input { font-family : \"{{ font.text }}\" , \"Helvetica Neue\" , Helvetica , Arial , sans-serif } code , kbd , pre { font-family : \"{{ font.code }}\" , \"Fira Mono\" , \"Courier New\" , Courier , monospace }</ style > {% endif %} {% endblock %} All these modified files are available on my GitHub repo for this project. Deploying \u00b6 Following the guide from MkDocs , I deployed to GitHub Pages with a custom domain ( retnikt.uk ) which you have to put in a CNAME file in your docs/ folder. Every time I make a change I simply run mkdocs gh-deploy , which does all the work for you.","title":"My Website"},{"location":"projects/website/#my-website","text":"Across my lifetime, I have tried numerous mechanisms for my website with a basic blog system, including WordPress, Pelican, Jekyll, and even a home-grown solution. I have now settled on MkDocs , which is definitely not intended for blogging, but I find it well-suited for the task.","title":"My Website"},{"location":"projects/website/#getting-started","text":"I installed mkdocs with pip install mkdocs and created a new project using mkdocs new . . I also initialised a Git repository on GitHub to version all the configuration and content.","title":"Getting Started"},{"location":"projects/website/#customisation","text":"Now it's time for some configuration.","title":"Customisation"},{"location":"projects/website/#theme","text":"The first thing to do is pick a theme. I chose the popular and brilliant mkdocs-material . To install, you can follow this guide for detailed instructions, but essentially: you use pip. ( pip install mkdocs-material ) Code theme : name : 'material' custom_dir : 'theme' The custom_dir line is so that we can override parts of the HTML. We can make some tweaks to the rest of the appearance too, including colours, fonts, and many other options . Here's my final theme section: Code theme : name : 'material' custom_dir : 'theme' language : en palette : primary : 'blue' accent : 'blue' font : text : 'Noto Sans' code : 'Fira Code' # we'll need some extra setup to make this work logo : icon : 'developer_board' feature : false favicon : 'assets/images/favicon2.png'","title":"Theme"},{"location":"projects/website/#extra-options","text":"First let's set some basic options: Code site_name : retnikt site_url : 'https://retnikt.uk/' I'm going to add a copyright to the footer and some social media links, and enable a few (lots of) Markdown extensions: Code copyright : '\u00a9 retnikt 2019' extra : social : - type : 'github' link : 'https://github.com/retnikt' - type : 'twitter' link : 'https://twitter.com/retnikt' markdown_extensions : - admonition - codehilite - footnotes - meta - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - markdown.extensions.attr_list - markdown.extensions.def_list - markdown.extensions.tables - markdown.extensions.abbr - pymdownx.extrarawhtml - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.progressbar - pymdownx.keys - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde - toc : permalink : true","title":"Extra Options"},{"location":"projects/website/#block-overrides","text":"I want to customise some of the theme components, particularly the footer. I'm going to add a GitHub Pages reference (see Deploying below), and hide the Next/Previous arrows for the homepage. Here's what I changed in the partials/footer.html Jinja2 template. Code ... <!-- if this is the homepage, then don't display the arrows --> {% if (not page.is_homepage) and (page.previous_page or page.next_page) %} < div class = \"md-footer-nav\" > < nav class = \"md-footer-nav__inner md-grid\" > <!-- if previous page is the homepage, then don't display the previous arrow --> {% if page.previous_page and not page.previous_page.is_homepage %} ... < a href = \"https://www.mkdocs.org\" > MkDocs </ a > and < a href = \"https://squidfunk.github.io/mkdocs-material/\" > Material for MkDocs </ a > hosted on < a href = \"https://pages.github.com\" > GitHub Pages </ a > </ div > ... I also modified partials/nav.html as well, changing {{ config.site_name }} (which would contain the site name) to just \"Navigation\" and change \"Table of contents\" to just \"Contents\" with a modified language file ( partials/language/en.html ). Also, to get the Fira Code font to work we need to modify the fonts block in the HTML < head > . In main.html , add: Code <!-- override the fonts block --> {% block fonts %} < style > /* use the Fira Code font from CDN */ @ font-face { font-family : 'Fira Code' ; src : local ( 'Fira Code Medium' ), local ( 'Fira Code' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/eot/FiraCode-Medium.eot' ); src : url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/eot/FiraCode-Medium.eot' ) format ( 'embedded-opentype' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/woff2/FiraCode-Medium.woff2' ) format ( 'woff2' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/woff/FiraCode-Medium.woff' ) format ( 'woff' ), url ( 'https://cdn.jsdelivr.net/npm/firacode@1.206.0/distr/ttf/FiraCode-Medium.ttf' ) format ( 'truetype' ); font-weight : 500 ; font-style : normal ; } </ style > {% if font != false %} < link href = \"https://fonts.gstatic.com\" rel = \"preconnect\" crossorigin > <!-- note the change to this link tag to stop trying to load Fira Code from Google Fonts (it's not there) --> < link rel = \"stylesheet\" href = \"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700|' }}\" > <!-- note the change to this style tag to load Fira Mono as a backup --> < style > body , input { font-family : \"{{ font.text }}\" , \"Helvetica Neue\" , Helvetica , Arial , sans-serif } code , kbd , pre { font-family : \"{{ font.code }}\" , \"Fira Mono\" , \"Courier New\" , Courier , monospace }</ style > {% endif %} {% endblock %} All these modified files are available on my GitHub repo for this project.","title":"Block Overrides"},{"location":"projects/website/#deploying","text":"Following the guide from MkDocs , I deployed to GitHub Pages with a custom domain ( retnikt.uk ) which you have to put in a CNAME file in your docs/ folder. Every time I make a change I simply run mkdocs gh-deploy , which does all the work for you.","title":"Deploying"}]}